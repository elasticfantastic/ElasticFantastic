input {
	file {
		type => "elastic_logs"
		path => "C:/elasticfantastic/resources/logs/log*"
		sincedb_path => "C:/elasticfantastic/resources/logs/sincedb/sincedb.log"
		start_position => "beginning"
	}
    jdbc {
		type => "elastic_orders"
        jdbc_connection_string => "jdbc:sqlserver://localhost;database=ElasticFantastic"
        jdbc_user => "klaras"
        jdbc_password => "klara96"
        jdbc_driver_library => "C:/elasticfantastic/resources/lib/mssql-jdbc-7.2.1.jre8.jar"
        jdbc_driver_class => "com.microsoft.sqlserver.jdbc.SQLServerDriver"
        jdbc_validate_connection => true
		last_run_metadata_path => "C:/elasticfantastic/resources/orders/orders_last_run"
		schedule => "/20 * * * * *"
        statement_filepath => "C:/elasticfantastic/resources/orders/sql_to_run.sql"
    }
}
filter {
	if [type] == "elastic_logs" {
		dissect {
			mapping => {
				"message" => "[%{id}] [%{level}] [%{date}] [%{payload_b64}] - %{text}"
			}
		}
		ruby {
			init => "require 'base64'"
			code => "event.set('payload', Base64.decode64(event.get('payload_b64'))) if event.include?('payload_b64')"
		}
		mutate {
			remove_field => ["path", "host", "payload_b64"]
			strip => ["text", "message"]
		}
		fingerprint {
			source => "message"
			target => "[@metadata][fingerprint]"
			method => "SHA256"
			key => "fingerprint-key"
		}
	}
	if [type] == "elastic_orders" {
		metrics {
			meter => "documents"
			add_tag => "metric"
			flush_interval => 60
		}
		fingerprint {
			#source => "[%{orderNbr}]-[%{articleNbr}]-[%{customerSSN]}"
			source => ["customer_ssn", "order_nbr", "product_nbr"]
			target => "[@metadata][fingerprint]"
			method => "SHA256"
			key => "fingerprint-key"
			concatenate_sources => true
		}
	}
}
output {
	if [type] == "elastic_logs" {
		elasticsearch {
			hosts => ["localhost:9200"]
			index => "logs"
			document_id => "%{[@metadata][fingerprint]}"
		}
		stdout {
			codec => rubydebug
		}
	}
	if [type] == "elastic_orders" {
		elasticsearch {
			hosts => ["localhost:9200"]
			index => "orders"
			document_id => "%{[@metadata][fingerprint]}"
		}
		stdout {
			codec => rubydebug
		}
	}
}